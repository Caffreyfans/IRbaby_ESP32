name: Build & Release ESP-IDF Firmware

on:
  push:
    tags:
      - 'v*'   # 触发条件：push tag，例如 v1.0.0

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: espressif/idf:release-v5.4   # 官方 v5.4 Docker 镜像

    strategy:
      matrix:
        target: [esp32, esp32c6]   # 支持 ESP32 和 ESP32-C6

    steps:
      # 1️⃣ Checkout 仓库
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: false
          fetch-depth: 0   # 需要完整历史以支持 submodule

      # 2️⃣ 配置 Git safe directory
      - name: Configure Git safe directory
        run: |
          git config --global --add safe.directory /__w/${{ github.repository }}/

      # 3️⃣ 拉取子模块（支持公共 + 私有）
      - name: Init & Update Submodules
        shell: bash
        run: |
          git submodule update --init --recursive

      # 5️⃣ 构建固件
      - name: Build firmware (${{ matrix.target }})
        shell: bash
        run: |
          . /opt/esp/idf/export.sh
          idf.py set-target ${{ matrix.target }}
          idf.py build
          idf.py merge-bin

      # 6️⃣ 创建 GitHub Release（使用 PAT 避免权限问题）
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_PAT }}

      # 7️⃣ 上传 merged-binary.bin 到 Release
      - name: Upload firmware to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/merged-binary.bin
          asset_name: ${{ matrix.target }}-4M.bin
          asset_content_type: application/octet-stream
